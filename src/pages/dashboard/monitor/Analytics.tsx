import { Box, Button, Divider, Typography } from "@mui/material";
import ChartComponent from "./ChartComponent";
import NoResultIllustration from "../../../components/NoResult";

export default function Analytics({ chartData }: any) {
  return (
    <Box>
      <Box marginTop={2}>
        {chartData.length > 0 ? (
          <Box
            sx={{
              display: "grid",
              columnGap: 1,
              rowGap: 1,
              gridTemplateColumns: "repeat(2, 1fr)",
            }}
          >
            {chartData
              ?.filter((result: { status: boolean }) => result?.status === true)
              .map((chart: any, index: any) => (
                <Box
                  sx={{
                    borderRadius: 2,
                    border: "1px #E4E7EC solid",
                    background: "white",
                  }}
                >
                  <Box
                    sx={{
                      display: "flex",
                      flexDirection: "row",
                      gap: 1,
                      justifyContent: "space-between",
                    }}
                  >
                    <Typography
                      sx={{ p: 3 }}
                      fontWeight={600}
                      fontSize={18}
                      color="#090816"
                    >
                      {chart.title}
                    </Typography>
                    {chart.status === true ? (
                      <Button
                        // onClick={() => handleUnPin(chart.id)}
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          textTransform: "none",
                        }}
                      >
                        <svg
                          width="17"
                          height="19"
                          viewBox="0 0 17 19"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g id="Pin">
                            <path
                              id="Vector"
                              d="M7.06735 2.86245C8.39053 0.570633 11.3211 -0.2146 13.6129 1.10858C15.9047 2.43176 16.6899 5.3623 15.3668 7.65412L15.2766 7.8102C16.3452 9.58526 16.5265 11.8238 15.627 13.8089C15.496 14.0982 15.3127 14.4156 14.9955 14.965L14.9629 15.0215C14.925 15.0872 14.8857 15.1554 14.8432 15.2147C14.438 15.7802 13.6897 15.9807 13.0559 15.6936C12.9895 15.6635 12.9214 15.6241 12.8558 15.5861L7.69641 12.6073L4.67558 17.8396C4.50299 18.1385 4.12074 18.2409 3.82181 18.0683C3.52288 17.8958 3.42045 17.5135 3.59304 17.2146L6.61388 11.9823L1.45448 9.00357C1.38881 8.96572 1.32064 8.92643 1.26136 8.88395C0.695836 8.4787 0.49533 7.7304 0.782464 7.09669C0.812562 7.03026 0.851956 6.96214 0.8899 6.89654L0.922512 6.84007C1.23969 6.29067 1.423 5.97315 1.60797 5.71503C2.87717 3.94385 4.90585 2.98161 6.97693 3.01907L7.06735 2.86245Z"
                              fill="#090816"
                            />
                          </g>
                        </svg>
                      </Button>
                    ) : (
                      <Button
                        // onClick={() => handlePin(chart.id)}
                        sx={{
                          display: "flex",
                          alignItems: "center",
                          textTransform: "none",
                        }}
                      >
                        <svg
                          width="17"
                          height="19"
                          viewBox="0 0 17 19"
                          fill="none"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            fill-rule="evenodd"
                            clip-rule="evenodd"
                            d="M7.25817 3.26223C5.18709 3.22477 3.15842 4.18701 1.88922 5.95819C1.70425 6.21631 1.52094 6.53382 1.20376 7.08323L1.18119 7.12233C1.17786 7.1281 1.17451 7.13388 1.17116 7.13969C1.13321 7.2053 1.09381 7.27342 1.06371 7.33985C0.77658 7.97356 0.977086 8.72186 1.54261 9.12711C1.60189 9.16959 1.67007 9.20889 1.73574 9.24673C1.74155 9.25008 1.74734 9.25342 1.7531 9.25675L6.89513 12.2255L3.87429 17.4577C3.7017 17.7567 3.80413 18.1389 4.10306 18.3115C4.40199 18.4841 4.78424 18.3817 4.95683 18.0827L7.97766 12.8505L13.1197 15.8192C13.1255 15.8226 13.1312 15.8259 13.1371 15.8293C13.2027 15.8672 13.2708 15.9066 13.3372 15.9367C13.9709 16.2239 14.7192 16.0233 15.1245 15.4578C15.167 15.3985 15.2063 15.3303 15.2441 15.2647C15.2474 15.2589 15.2508 15.2531 15.2541 15.2473L15.2767 15.2082C15.5939 14.6588 15.7772 14.3413 15.9083 14.0521C16.8077 12.0669 16.6265 9.82841 15.5579 8.05336L15.648 7.89728C16.9712 5.60546 16.1859 2.67493 13.8941 1.35175C11.6023 0.0285644 8.67177 0.813798 7.34859 3.10562L7.25817 3.26223ZM8.6225 3.43383C9.02268 3.52846 9.41838 3.66253 9.80425 3.83736C10.0935 3.96842 10.411 4.15174 10.9604 4.46895L12.6624 5.45161C13.2118 5.76878 13.5293 5.95209 13.7874 6.13705C14.1314 6.38356 14.4451 6.65892 14.7269 6.95783C15.4686 5.31884 14.8599 3.35271 13.2691 2.43428C11.6783 1.51579 9.67101 1.9718 8.6225 3.43383ZM7.55856 4.52794C5.7774 4.38439 3.9943 5.16655 2.90527 6.68628C2.76074 6.88797 2.60973 7.14802 2.26372 7.74733C2.23848 7.79105 2.22347 7.81709 2.21247 7.83692C2.20547 7.84954 2.20194 7.85651 2.20194 7.85651C2.16156 7.94661 2.18999 8.05272 2.27002 8.11056C2.27002 8.11056 2.27655 8.11483 2.28892 8.12225C2.30837 8.13393 2.33438 8.14897 2.3781 8.17421L8.06139 11.4555L13.7447 14.7367C13.7884 14.762 13.8144 14.777 13.8343 14.788C13.8461 14.7945 13.8518 14.7974 13.8536 14.7983C13.9441 14.8394 14.0505 14.8105 14.1084 14.7297C14.1063 14.7326 14.1085 14.73 14.1196 14.7115C14.1313 14.6921 14.1463 14.6661 14.1716 14.6223C14.5176 14.023 14.6673 13.7622 14.7697 13.5362C15.5426 11.8303 15.3264 9.89136 14.3071 8.4197C13.9747 7.93989 13.5569 7.50962 13.0593 7.15311C12.8576 7.00858 12.5976 6.85757 11.9983 6.51156L10.3745 5.57406C9.77518 5.22804 9.51438 5.07834 9.28837 4.97594C8.72797 4.72203 8.14328 4.57507 7.55856 4.52794Z"
                            fill="#2E90FA"
                          />
                        </svg>
                      </Button>
                    )}
                  </Box>

                  <Divider />
                  <ChartComponent
                    chart={chart}
                    chartResponse={chart.result}
                    index={index}
                    xs={"100%"}
                  />
                </Box>
              ))}
          </Box>
        ) : (
          <NoResultIllustration text="No report generated yet" />
        )}
      </Box>
    </Box>
  );
}
